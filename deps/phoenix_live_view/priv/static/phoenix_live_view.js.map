{
  "version": 3,
  "sources": ["../../assets/js/phoenix_live_view/constants.js", "../../assets/js/phoenix_live_view/entry_uploader.js", "../../assets/js/phoenix_live_view/utils.js", "../../assets/js/phoenix_live_view/browser.js", "../../assets/js/phoenix_live_view/dom.js", "../../assets/js/phoenix_live_view/upload_entry.js", "../../assets/js/phoenix_live_view/live_uploader.js", "../../assets/js/phoenix_live_view/hooks.js", "../../assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../../assets/node_modules/morphdom/dist/morphdom-esm.js", "../../assets/js/phoenix_live_view/dom_patch.js", "../../assets/js/phoenix_live_view/rendered.js", "../../assets/js/phoenix_live_view/view_hook.js", "../../assets/js/phoenix_live_view/view.js", "../../assets/js/phoenix_live_view/live_socket.js"],
  "sourcesContent": ["\nexport const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER = [1000, 3000]\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF = \"data-phx-ref\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_REMOVE = \"data-phx-remove\"\nexport const PHX_PAGE_LOADING = \"page-loading\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_DISCONNECTED_CLASS = \"phx-disconnected\"\nexport const PHX_NO_FEEDBACK_CLASS = \"phx-no-feedback\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_FEEDBACK_FOR = \"feedback-for\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const LOADER_TIMEOUT = 1\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\n\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    clearTimeout(this.chunkTimer)\n    this.uploadChannel.leave()\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`)){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n        let hashEl = this.getHashTargetEl(window.location.hash)\n\n        if(hashEl){\n          hashEl.scrollIntoView()\n        } else if(meta.type === \"redirect\"){\n          window.scroll(0, 0)\n        }\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value){\n    document.cookie = `${name}=${value}`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  redirect(toURL, flash){\n    if(flash){ Browser.setCookie(\"__phoenix_flash__\", flash + \"; max-age=60000; path=/\") }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_EVENT_CLASSES,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_NO_FEEDBACK_CLASS,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  THROTTLED\n} from \"./constants\"\n\nimport {\n  clone,\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  findUploadInputs(node){ return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`) },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  markPhxChildDestroyed(el){\n    el.setAttribute(PHX_SESSION, \"\")\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findParentCIDs(node, cids){\n    let initial = new Set(cids)\n    return cids.reduce((acc, cid) => {\n      let selector = `[${PHX_COMPONENT}=\"${cid}\"] [${PHX_COMPONENT}]`\n\n      this.filterWithinSameLiveView(this.all(node, selector), node)\n        .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n        .forEach(childCID => acc.delete(childCID))\n\n      return acc\n    }, initial)\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = clone(source[PHX_PRIVATE])\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    let {prefix, suffix} = titleEl.dataset\n    document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => callback())\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            this.putPrivate(el, THROTTLED, true)\n            setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER), timeout)\n          }\n        } else {\n          setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle), timeout)\n        }\n\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => this.triggerCycle(el, DEBOUNCE_TRIGGER))\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  discardError(container, el, phxFeedbackFor){\n    let field = el.getAttribute && el.getAttribute(phxFeedbackFor)\n    // TODO: Remove id lookup after we update Phoenix to use input_name instead of input_id\n    let input = field && container.querySelector(`[id=\"${field}\"], [name=\"${field}\"]`)\n    if(!input){ return }\n\n    if(!(this.private(input, PHX_HAS_FOCUSED) || this.private(input.form, PHX_HAS_SUBMITTED))){\n      el.classList.add(PHX_NO_FEEDBACK_CLASS)\n    }\n  },\n\n  showError(inputEl, phxFeedbackFor){\n    if(inputEl.id || inputEl.name){\n      this.all(inputEl.form, `[${phxFeedbackFor}=\"${inputEl.id}\"], [${phxFeedbackFor}=\"${inputEl.name}\"]`, (el) => {\n        this.removeClass(el, PHX_NO_FEEDBACK_CLASS)\n      })\n    }\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  dispatchEvent(target, eventString, detail = {}){\n    let event = new CustomEvent(eventString, {bubbles: true, cancelable: true, detail: detail})\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  mergeAttrs(target, source, opts = {}){\n    let exclude = opts.exclude || []\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(exclude.indexOf(name) < 0){ target.setAttribute(name, source.getAttribute(name)) }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {except: [\"value\"]}) }\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(!DOM.isTextualInput(focused)){ return }\n    let wasFocused = focused.matches(\":focus\")\n    if(focused.readOnly){ focused.blur() }\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  syncPendingRef(fromEl, toEl, disableWith){\n    let ref = fromEl.getAttribute(PHX_REF)\n    if(ref === null){ return true }\n\n    if(DOM.isFormInput(fromEl) || fromEl.getAttribute(disableWith) !== null){\n      if(DOM.isUploadInput(fromEl)){ DOM.mergeAttrs(fromEl, toEl, {isIgnored: true}) }\n      DOM.putPrivate(fromEl, PHX_REF, toEl)\n      return false\n    } else {\n      PHX_EVENT_CLASSES.forEach(className => {\n        fromEl.classList.contains(className) && toEl.classList.add(className)\n      })\n      toEl.setAttribute(PHX_REF, ref)\n      return true\n    }\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN])\n    let notRetained = (attr) => !retainedAttrs.has(attr.name.toLowerCase())\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(notRetained)\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(notRetained)\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  constructor(fileEl, file, view){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function (){ }\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  cancel(){\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    LiveUploader.clearFiles(this.fileEl)\n  }\n\n  //private\n\n  onDone(callback){ this._onDone = callback }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    let reader = new FileReader()\n    reader.onload = (e) => callback(e.target.result)\n    reader.readAsDataURL(file)\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl, \"serialize\")\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.name = file.name\n      entry.type = file.type\n      entry.size = file.size\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.putPrivate(inputEl, \"files\", this.activeFiles(inputEl).concat(newFiles))\n      inputEl.value = null\n    } else {\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view))\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        entry.zipPostFlight(resp)\n        entry.onDone(() => {\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        })\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "import {\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view.cancelSubmit(this.el.form)\n        }\n      }\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => this.el.src = url)\n    }\n  }\n}\n\nexport default Hooks\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_FEEDBACK_FOR,\n  PHX_REMOVE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchEl(fromEl, toEl, activeElement){\n    morphdom(fromEl, toEl, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.targetCID = targetCID\n    this.cidPatch = typeof (this.targetCID) === \"number\"\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    DOM.all(this.container, \"[phx-update=append] > *, [phx-update=prepend] > *\", el => {\n      el.setAttribute(PHX_REMOVE, \"\")\n    })\n  }\n\n  perform(){\n    let {view, liveSocket, container, html} = this\n    let targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxFeedbackFor = liveSocket.binding(PHX_FEEDBACK_FOR)\n    let disableWith = liveSocket.binding(PHX_DISABLE_WITH)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n    let externalFormTriggered = null\n\n    let diffHTML = liveSocket.time(\"premorph container prep\", () => {\n      return this.buildDiffHTML(container, html, phxUpdate, targetContainer)\n    })\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      morphdom(targetContainer, diffHTML, {\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null,\n        getNodeKey: (node) => {\n          return DOM.isPhxDestroyed(node) ? null : node.id\n        },\n        onBeforeNodeAdded: (el) => {\n          //input handling\n          DOM.discardError(targetContainer, el, phxFeedbackFor)\n          this.trackBefore(\"added\", el)\n          return el\n        },\n        onNodeAdded: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          // nested view handling\n          if(DOM.isPhxChild(el) && view.ownsElement(el)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => {\n          // nested view handling\n          if(DOM.isPhxChild(el)){ liveSocket.destroyViewByEl(el) }\n          this.trackAfter(\"discarded\", el)\n        },\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_REMOVE) !== null){ return true }\n          if(el.parentNode !== null && DOM.isPhxUpdate(el.parentNode, phxUpdate, [\"append\", \"prepend\"]) && el.id){ return false }\n          if(this.skipCIDSibling(el)){ return false }\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){ return false }\n          if(DOM.isIgnored(fromEl, phxUpdate)){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n            updates.push(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          if(!DOM.syncPendingRef(fromEl, toEl, disableWith)){\n            if(DOM.isUploadInput(fromEl)){\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            return false\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n          DOM.discardError(targetContainer, toEl, phxFeedbackFor)\n\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          if(isFocusedFormEl && !this.forceFocusedSelectUpdate(fromEl, toEl)){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            return false\n          } else {\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n            DOM.syncAttrsToProps(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return true\n          }\n        }\n      })\n    })\n\n    if(liveSocket.isDebugEnabled()){ detectDuplicateIds() }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    if(externalFormTriggered){\n      liveSocket.disconnect()\n      externalFormTriggered.submit()\n    }\n    return true\n  }\n\n  forceFocusedSelectUpdate(fromEl, toEl){\n    let isSelect = [\"select\", \"select-one\", \"select-multiple\"].find((t) => t === fromEl.type)\n    return fromEl.multiple === true || (isSelect && fromEl.innerHTML != toEl.innerHTML)\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.getAttribute(PHX_SKIP) !== null\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  // builds HTML for morphdom patch\n  // - for full patches of LiveView or a component with a single\n  //   root node, simply returns the HTML\n  // - for patches of a component with multiple root nodes, the\n  //   parent node becomes the target container and non-component\n  //   siblings are marked as skip.\n  buildDiffHTML(container, html, phxUpdate, targetContainer){\n    let isCIDPatch = this.isCIDPatch()\n    let isCIDWithSingleRoot = isCIDPatch && targetContainer.getAttribute(PHX_COMPONENT) === this.targetCID.toString()\n    if(!isCIDPatch || isCIDWithSingleRoot){\n      return html\n    } else {\n      // component patch with multiple CID roots\n      let diffContainer = null\n      let template = document.createElement(\"template\")\n      diffContainer = DOM.cloneNode(targetContainer)\n      let [firstComponent, ...rest] = DOM.findComponentNodeList(diffContainer, this.targetCID)\n      template.innerHTML = html\n      rest.forEach(el => el.remove())\n      Array.from(diffContainer.childNodes).forEach(child => {\n        // we can only skip trackable nodes with an ID\n        if(child.id && child.nodeType === Node.ELEMENT_NODE && child.getAttribute(PHX_COMPONENT) !== this.targetCID.toString()){\n          child.setAttribute(PHX_SKIP, \"\")\n          child.innerHTML = \"\"\n        }\n      })\n      Array.from(template.content.childNodes).forEach(el => diffContainer.insertBefore(el, firstComponent))\n      firstComponent.remove()\n      return diffContainer.outerHTML\n    }\n  }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  REPLY,\n  STATIC,\n  TITLE\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError\n} from \"./utils\"\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    return this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids)\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids}\n    this.toOutputBuffer(rendered, output)\n    return output.buffer\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(var key in newc){ oldc[key] = newc[key] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(typeof (scid) === \"number\"){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined ? cdiff : this.cloneMerge(oldc[cid] || {}, cdiff)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n  }\n\n  cloneMerge(target, source){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val)\n      }\n    }\n    return merged\n  }\n\n  componentToString(cid){ return this.recursiveCIDToString(this.rendered[COMPONENTS], cid) }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  toOutputBuffer(rendered, output){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, output) }\n    let {[STATIC]: statics} = rendered\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], output)\n      output.buffer += statics[i]\n    }\n  }\n\n  comprehensionToBuffer(rendered, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics} = rendered\n\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        this.dynamicToBuffer(dynamic[i - 1], output)\n        output.buffer += statics[i]\n      }\n    }\n  }\n\n  dynamicToBuffer(rendered, output){\n    if(typeof (rendered) === \"number\"){\n      output.buffer += this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, output)\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let template = document.createElement(\"template\")\n    template.innerHTML = this.recursiveToString(component, components, onlyCids)\n    let container = template.content\n    let skip = onlyCids && !onlyCids.has(cid)\n\n    let [hasChildNodes, hasChildComponents] =\n      Array.from(container.childNodes).reduce(([hasNodes, hasComponents], child, i) => {\n        if(child.nodeType === Node.ELEMENT_NODE){\n          if(child.getAttribute(PHX_COMPONENT)){\n            return [hasNodes, true]\n          }\n          child.setAttribute(PHX_COMPONENT, cid)\n          if(!child.id){ child.id = `${this.parentViewId()}-${cid}-${i}` }\n          if(skip){\n            child.setAttribute(PHX_SKIP, \"\")\n            child.innerHTML = \"\"\n          }\n          return [true, hasComponents]\n        } else {\n          if(child.nodeValue.trim() !== \"\"){\n            logError(\"only HTML element tags are allowed at the root of components.\\n\\n\" +\n              `got: \"${child.nodeValue.trim()}\"\\n\\n` +\n              \"within:\\n\", template.innerHTML.trim())\n            child.replaceWith(this.createSpan(child.nodeValue, cid))\n            return [true, hasComponents]\n          } else {\n            child.remove()\n            return [hasNodes, hasComponents]\n          }\n        }\n      }, [false, false])\n\n    if(!hasChildNodes && !hasChildComponents){\n      logError(\"expected at least one HTML element tag inside a component, but the component is empty:\\n\",\n        template.innerHTML.trim())\n      return this.createSpan(\"\", cid).outerHTML\n    } else if(!hasChildNodes && hasChildComponents){\n      logError(\"expected at least one HTML element tag directly inside a component, but only subcomponents were found. A component must render at least one HTML tag directly inside itself.\",\n        template.innerHTML.trim())\n      return template.innerHTML\n    } else {\n      return template.innerHTML\n    }\n  }\n\n  createSpan(text, cid){\n    let span = document.createElement(\"span\")\n    span.innerText = text\n    span.setAttribute(PHX_COMPONENT, cid)\n    return span\n  }\n}\n", "let viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return el.phxHookId }\n\n  constructor(view, el, callbacks){\n    this.__view = view\n    this.__liveSocket = view.liveSocket\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    this.el = el\n    this.el.phxHookId = this.constructor.makeID()\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view.pushHookEvent(null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:hook:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:hook:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_DISCONNECTED_CLASS,\n  PHX_EVENT_CLASSES,\n  PHX_ERROR_CLASS,\n  PHX_FEEDBACK_FOR,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PAGE_LOADING,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PUSH_TIMEOUT,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\n\nlet serializeForm = (form, meta = {}) => {\n  let formData = new FormData(form)\n  let toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  let params = new URLSearchParams()\n  for(let [key, val] of formData.entries()){ params.append(key, val) }\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  constructor(el, liveSocket, parentView, flash){\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    this.id = this.el.id\n    this.ref = 0\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pruningCIDs = []\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function (){ }\n    this.stopCallback = function (){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.uploaders = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      return {\n        redirect: this.redirect ? this.href : undefined,\n        url: this.redirect ? undefined : this.href || undefined,\n        params: this.connectParams(),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash\n      }\n    })\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.liveSocket.main === this }\n\n  connectParams(){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_DISCONNECTED_CLASS,\n      PHX_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  isLoading(){ return this.el.classList.contains(PHX_DISCONNECTED_CLASS) }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_DISCONNECTED_CLASS)\n    }\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  withinTargets(phxTarget, callback){\n    if(phxTarget instanceof HTMLElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(/^(0|[1-9]\\d*)$/.test(phxTarget)){\n      let targets = DOM.findComponentNodeList(this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, targets[0])\n      }\n    } else {\n      let targets = Array.from(document.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    if(title){ DOM.putTitle(title) }\n\n    callback({diff, reply, events})\n    return reply\n  }\n\n  onJoin(resp){\n    let {rendered, container} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let html = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      let forms = this.formsForRecovery(html)\n      this.joinCount++\n\n      if(forms.length > 0){\n        forms.forEach((form, i) => {\n          this.pushFormRecovery(form, resp => {\n            if(i === forms.length - 1){\n              this.onJoinComplete(resp, html, events)\n            }\n          })\n        })\n      } else {\n        this.onJoinComplete(resp, html, events)\n      }\n    })\n  }\n\n  dropPendingRefs(){ DOM.all(this.el, `[${PHX_REF}]`, el => el.removeAttribute(PHX_REF)) }\n\n  onJoinComplete({live_patch}, html, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`#${toEl.id}`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => {\n      window.dispatchEvent(new CustomEvent(`phx:hook:${event}`, {detail: payload}))\n    })\n  }\n\n  applyJoinPatch(live_patch, html, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false)\n    this.joinNewChildren()\n    DOM.all(this.el, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      let hook = this.addHook(hookEl)\n      if(hook){ hook.__mounted() }\n    })\n\n    this.joinPending = false\n    this.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  performPatch(patch, pruneCids){\n    let destroyedCIDs = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n\n      let newHook = this.addHook(el)\n      if(newHook){ newHook.__mounted() }\n    })\n\n    patch.after(\"phxChildAdded\", _el => phxChildrenAdded = true)\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      let cid = this.componentID(el)\n      if(typeof (cid) === \"number\" && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      let hook = this.getHook(el)\n      hook && this.destroyHook(hook)\n    })\n\n    patch.perform()\n\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n\n    return phxChildrenAdded\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)][el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    this.joinCallback()\n    this.pendingJoinOps.forEach(([view, op]) => {\n      if(!view.isDestroyed()){ op() }\n    })\n    this.pendingJoinOps = []\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || this.liveSocket.hasPendingLink()){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let html = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff).concat(this.pruningCIDs) : null\n      let html = this.rendered.toString(cids)\n      return `<${tag}>${html}</${tag}>`\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let html = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    if(ViewHook.elementID(el) || !el.getAttribute){ return }\n    let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n    if(hookName && !this.ownsElement(el)){ return }\n    let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n    if(callbacks){\n      if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n      let hook = new ViewHook(this, el, callbacks)\n      this.viewHooks[ViewHook.elementID(hook.el)] = hook\n      return hook\n    } else if(hookName !== null){\n      logError(`unknown hook found for \"${hookName}\"`, el)\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        cb(resp)\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){\n    for(let id in this.root.children[this.id]){\n      this.getChildById(id).destroy()\n    }\n  }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    this.liveSocket.historyRedirect(url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash}){ this.liveSocket.redirect(to, flash) }\n\n  isDestroyed(){ return this.destroyed }\n\n  join(callback){\n    if(!this.parent){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = () => callback && callback(this.joinCount)\n    this.liveSocket.wrapPush(this, {timeout: false}, () => {\n      return this.channel.join()\n        .receive(\"ok\", data => !this.isDestroyed() && this.onJoin(data))\n        .receive(\"error\", resp => !this.isDestroyed() && this.onJoinError(resp))\n        .receive(\"timeout\", () => !this.isDestroyed() && this.onJoinError({reason: \"timeout\"}))\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      return this.onRedirect({to: this.href})\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    return this.liveSocket.reloadWithJitter(this)\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if((this.isJoinPending() && document.visibilityState !== \"hidden\") ||\n      (this.liveSocket.hasPendingLink() && reason !== \"leave\")){\n\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    this.log(\"error\", () => [\"view crashed\", reason])\n    if(!this.liveSocket.isUnloaded()){ this.displayError() }\n  }\n\n  displayError(){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {to: this.href, kind: \"error\"}) }\n    this.showLoader()\n    this.setContainerClasses(PHX_DISCONNECTED_CLASS, PHX_ERROR_CLASS)\n  }\n\n  pushWithReply(refGenerator, event, payload, onReply = function (){ }){\n    if(!this.isConnected()){ return }\n\n    let [ref, [el]] = refGenerator ? refGenerator() : [null, []]\n    let onLoadingDone = function (){ }\n    if(el && (el.getAttribute(this.binding(PHX_PAGE_LOADING)) !== null)){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n    return (\n      this.liveSocket.wrapPush(this, {timeout: true}, () => {\n        return this.channel.push(event, payload, PUSH_TIMEOUT).receive(\"ok\", resp => {\n          let hookReply = null\n          if(ref !== null){ this.undoRefs(ref) }\n          if(resp.diff){\n            hookReply = this.applyDiff(\"update\", resp.diff, ({diff, events}) => {\n              this.update(diff, events)\n            })\n          }\n          if(resp.redirect){ this.onRedirect(resp.redirect) }\n          if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n          if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n          onLoadingDone()\n          onReply(resp, hookReply)\n        })\n      })\n    )\n  }\n\n  undoRefs(ref){\n    DOM.all(this.el, `[${PHX_REF}=\"${ref}\"]`, el => {\n      // remove refs\n      el.removeAttribute(PHX_REF)\n      // restore inputs\n      if(el.getAttribute(PHX_READONLY) !== null){\n        el.readOnly = false\n        el.removeAttribute(PHX_READONLY)\n      }\n      if(el.getAttribute(PHX_DISABLED) !== null){\n        el.disabled = false\n        el.removeAttribute(PHX_DISABLED)\n      }\n      // remove classes\n      PHX_EVENT_CLASSES.forEach(className => DOM.removeClass(el, className))\n      // restore disables\n      let disableRestore = el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        el.innerText = disableRestore\n        el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n      let toEl = DOM.private(el, PHX_REF)\n      if(toEl){\n        let hook = this.triggerBeforeUpdateHook(el, toEl)\n        DOMPatch.patchEl(el, toEl, this.liveSocket.getActiveElement())\n        if(hook){ hook.__updated() }\n        DOM.deletePrivate(el, PHX_REF)\n      }\n    })\n  }\n\n  putRef(elements, event){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n\n    elements.forEach(el => {\n      el.classList.add(`phx-${event}-loading`)\n      el.setAttribute(PHX_REF, newRef)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        el.innerText = disableText\n      }\n    })\n    return [newRef, elements]\n  }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx){\n    if(target.getAttribute(this.binding(\"target\"))){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els] = this.putRef([], \"hook\")\n    this.pushWithReply(() => [ref, els], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }, (resp, reply) => onReply(reply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined){\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta){\n    this.pushWithReply(() => this.putRef([el], type), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta),\n      cid: this.targetComponentID(el, targetCtx)\n    })\n  }\n\n  pushKey(keyElement, targetCtx, kind, phxEvent, meta){\n    this.pushWithReply(() => this.putRef([keyElement], kind), \"event\", {\n      type: kind,\n      event: phxEvent,\n      value: this.extractMeta(keyElement, meta),\n      cid: this.targetComponentID(keyElement, targetCtx)\n    })\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }, onReply)\n    })\n  }\n\n  pushInput(inputEl, targetCtx, phxEvent, eventTarget, callback){\n    let uploads\n    let cid = this.targetComponentID(inputEl.form, targetCtx)\n    let refGenerator = () => this.putRef([inputEl, inputEl.form], \"change\")\n    let formData = serializeForm(inputEl.form, {_target: eventTarget.name})\n    if(inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event, resp => {\n      DOM.showError(inputEl, this.liveSocket.binding(PHX_FEEDBACK_FOR))\n      if(DOM.isUploadInput(inputEl) && inputEl.getAttribute(\"data-phx-auto-upload\") !== null){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.uploadFiles(inputEl.form, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, callback] = awaitingSubmit\n      this.cancelSubmit(formEl)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, callback])\n  }\n\n  cancelSubmit(formEl){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, onReply){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let refGenerator = () => {\n      let formElements = Array.from(formEl.elements)\n      let disables = formElements.filter(filterDisables)\n      let buttons = formElements.filter(filterButton).filter(filterIgnored)\n      let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n      buttons.forEach(button => {\n        button.setAttribute(PHX_DISABLED, button.disabled)\n        button.disabled = true\n      })\n      inputs.forEach(input => {\n        input.setAttribute(PHX_READONLY, input.readOnly)\n        input.readOnly = true\n        if(input.files){\n          input.setAttribute(PHX_DISABLED, input.disabled)\n          input.disabled = true\n        }\n      })\n      formEl.setAttribute(this.binding(PHX_PAGE_LOADING), \"\")\n      return this.putRef([formEl].concat(disables).concat(buttons).concat(inputs), \"submit\")\n    }\n\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      return this.scheduleSubmit(formEl, ref, () => this.pushFormSubmit(formEl, targetCtx, phxEvent, onReply))\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els]\n      this.uploadFiles(formEl, targetCtx, ref, cid, (_uploads) => {\n        let formData = serializeForm(formEl, {})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }, onReply)\n      })\n    } else {\n      let formData = serializeForm(formEl)\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }, onReply)\n    }\n  }\n\n  uploadFiles(formEl, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, onComplete)\n      this.uploaders[inputEl] = uploader\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload, resp => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        if(resp.error){\n          this.undoRefs(ref)\n          let [entry_ref, reason] = resp.error\n          this.log(\"upload\", () => [`error for entry ${entry_ref}`, reason])\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  pushFormRecovery(form, callback){\n    this.liveSocket.withinOwners(form, (view, targetCtx) => {\n      let input = form.elements[0]\n      let phxEvent = form.getAttribute(this.binding(PHX_AUTO_RECOVER)) || form.getAttribute(this.binding(\"change\"))\n      view.pushInput(input, targetCtx, phxEvent, input, callback)\n    })\n  }\n\n  pushLinkPatch(href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    let refGen = targetEl ? () => this.putRef([targetEl], \"click\") : null\n\n    this.pushWithReply(refGen, \"live_patch\", {url: href}, resp => {\n      if(resp.link_redirect){\n        this.liveSocket.replaceMain(href, null, callback, linkRef)\n      } else {\n        if(this.liveSocket.commitPendingLink(linkRef)){\n          this.href = href\n        }\n        this.applyPendingUpdates()\n        callback && callback(linkRef)\n      }\n    }).receive(\"timeout\", () => this.liveSocket.redirect(window.location.href))\n  }\n\n  formsForRecovery(html){\n    if(this.joinCount === 0){ return [] }\n\n    let phxChange = this.binding(\"change\")\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n\n    return (\n      DOM.all(this.el, `form[${phxChange}]`)\n        .filter(form => this.ownsElement(form))\n        .filter(form => form.elements.length > 0)\n        .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n        .filter(form => template.content.querySelector(`form[${phxChange}=\"${form.getAttribute(phxChange)}\"]`))\n    )\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n    if(willDestroyCIDs.length > 0){\n      this.pruningCIDs.push(...willDestroyCIDs)\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}, () => {\n        // The cids are either back on the page or they will be fully removed,\n        // so we can remove them from the pruningCIDs.\n        this.pruningCIDs = this.pruningCIDs.filter(cid => willDestroyCIDs.indexOf(cid) !== -1)\n\n        // See if any of the cids we wanted to destroy were added back,\n        // if they were added back, we don't actually destroy them.\n        let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n          return DOM.findComponentNodeList(this.el, cid).length === 0\n        })\n\n        if(completelyDestroyCIDs.length > 0){\n          this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}, (resp) => {\n            this.rendered.pruneCIDs(resp.cids)\n          })\n        }\n      })\n    }\n  }\n\n  ownsElement(el){\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      maybe(el.closest(PHX_VIEW_SELECTOR), node => node.id) === this.id\n  }\n\n  submitForm(form, targetCtx, phxEvent){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, () => {\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  RELOAD_JITTER\n\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport {PHX_SESSION} from \"./constants\"\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import LiveSocket from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.domCallbacks = Object.assign({onNodeAdded: closure(), onBeforeElUpdated: closure()}, opts.dom || {})\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.removeItem(PHX_LV_DEBUG) }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    let doConnect = () => {\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      }\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){ this.socket.disconnect(callback) }\n\n  // private\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        console.log(`simulating ${latency}ms of latency from server to client`)\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  wrapPush(view, opts, push){\n    let latency = this.getLatencySim()\n    let oldJoinCount = view.joinCount\n    if(!latency){\n      if(opts.timeout){\n        return push().receive(\"timeout\", () => {\n          if(view.joinCount === oldJoinCount && !view.isDestroyed()){\n            this.reloadWithJitter(view, () => {\n              this.log(view, \"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        })\n      } else {\n        return push()\n      }\n    }\n\n    console.log(`simulating ${latency}ms of latency from client to server`)\n    let fakePush = {\n      receives: [],\n      receive(kind, cb){ this.receives.push([kind, cb]) }\n    }\n    setTimeout(() => {\n      if(view.isDestroyed()){ return }\n      fakePush.receives.reduce((acc, [kind, cb]) => acc.receive(kind, cb), push())\n    }, latency)\n    return fakePush\n  }\n\n  reloadWithJitter(view, log){\n    view.destroy()\n    this.disconnect()\n    let [minMs, maxMs] = RELOAD_JITTER\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n    if(tries > MAX_RELOADS){\n      this.log(view, \"join\", () => [`exceeded ${MAX_RELOADS} consecutive reloads. Entering failsafe mode`])\n      afterMs = FAILSAFE_JITTER\n    }\n    setTimeout(() => {\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.getAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash){\n    this.disconnect()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let oldMainEl = this.main.el\n    let newMainEl = DOM.cloneNode(oldMainEl)\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n    oldMainEl.replaceWith(newMainEl)\n\n    this.main = this.newRootView(newMainEl, flash)\n    this.main.setRedirect(href)\n    this.main.join(joinCount => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        callback && callback()\n      }\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash){\n    let view = new View(el, this, null, flash)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el))\n    if(view){ callback(view) }\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => {\n      let phxTarget = childEl.getAttribute(this.binding(\"target\"))\n      if(phxTarget === null){\n        callback(view, childEl)\n      } else {\n        view.withinTargets(phxTarget, callback)\n      }\n    })\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root){ root.destroyDescendent(el.id) }\n  }\n\n  setActiveElement(target){\n    if(this.activeElement === target){ return }\n    this.activeElement = target\n    let cancel = () => {\n      if(target === this.activeElement){ this.activeElement = null }\n      target.removeEventListener(\"mouseup\", this)\n      target.removeEventListener(\"touchend\", this)\n    }\n    target.addEventListener(\"mouseup\", cancel)\n    target.addEventListener(\"touchend\", cancel)\n  }\n\n  getActiveElement(){\n    if(document.activeElement === document.body){\n      return this.activeElement || document.activeElement\n    } else {\n      // document.activeElement can be null in Internet Explorer 11\n      return document.activeElement || document.body\n    }\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents(){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    this.bindNav()\n    this.bindClicks()\n    this.bindForms()\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, target, targetCtx, phxEvent, _phxTarget) => {\n      let matchKey = target.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      view.pushKey(target, targetCtx, type, phxEvent, {key: e.key, ...this.eventMeta(type, e, target)})\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      if(!phxTarget){\n        view.pushEvent(type, targetEl, targetCtx, phxEvent, this.eventMeta(type, e, targetEl))\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget && !phxTarget !== \"window\"){\n        view.pushEvent(type, targetEl, targetCtx, phxEvent, this.eventMeta(type, e, targetEl))\n      }\n    })\n    window.addEventListener(\"dragover\", e => e.preventDefault())\n    window.addEventListener(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    return this.linkRef\n  }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, () => {\n            this.withinOwners(e.target, (view, targetCtx) => {\n              callback(e, event, view, e.target, targetCtx, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, () => {\n              this.withinOwners(el, (view, targetCtx) => {\n                callback(e, event, view, el, targetCtx, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    this.bindClick(\"click\", \"click\", false)\n    this.bindClick(\"mousedown\", \"capture-click\", true)\n  }\n\n  bindClick(eventName, bindingName, capture){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      if(!this.isConnected()){ return }\n      let target = null\n      if(capture){\n        target = e.target.matches(`[${click}]`) ? e.target : e.target.querySelector(`[${click}]`)\n      } else {\n        target = closestPhxBinding(e.target, click)\n      }\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){ return }\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      this.debounce(target, e, () => {\n        this.withinOwners(target, (view, targetCtx) => {\n          view.pushEvent(\"click\", target, targetCtx, phxEvent, this.eventMeta(\"click\", e, target))\n        })\n      })\n    }, capture)\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n        this.main.pushLinkPatch(href, null)\n      } else {\n        this.replaceMain(href, null, () => {\n          if(root){ this.replaceRootHistory() }\n          if(typeof (scroll) === \"number\"){\n            setTimeout(() => {\n              window.scrollTo(0, scroll)\n            }, 0) // the body needs to render before we scroll.\n          }\n        })\n      }\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      let wantsNewTab = e.metaKey || e.ctrlKey || e.button === 1\n      if(!type || !this.isConnected() || !this.main || wantsNewTab){ return }\n      let href = target.href\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      if(this.pendingLink === href){ return }\n\n      if(type === \"patch\"){\n        this.pushHistoryPatch(href, linkState, target)\n      } else if(type === \"redirect\"){\n        this.historyRedirect(href, linkState)\n      } else {\n        throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n      }\n    }, false)\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", info)\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", info)\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(href, linkState, targetEl){\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(href, linkState, flash){\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, () => {\n        Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n        this.registerNewLocation(window.location)\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){ return }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, (view, targetCtx) => view.submitForm(e.target, targetCtx, phxEvent))\n    }, false)\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        let input = e.target\n        let phxEvent = input.form && input.form.getAttribute(this.binding(\"change\"))\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // detect dup because some browsers dispatch both \"input\" and \"change\"\n        if(at === currentIterations - 1 && type !== lastType){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, () => {\n          this.withinOwners(input.form, (view, targetCtx) => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            if(!DOM.isTextualInput(input)){\n              this.setActiveElement(input)\n            }\n            view.pushInput(input, targetCtx, phxEvent, e.target)\n          })\n        })\n      }, false)\n    }\n  }\n\n  debounce(el, event, callback){\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n    DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback)\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
